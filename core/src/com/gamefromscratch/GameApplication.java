package com.gamefromscratch;
/*
import com.badlogic.gdx.ApplicationListener;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input;
import com.badlogic.gdx.Screen;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.maps.tiled.TiledMap;
import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer;
import com.badlogic.gdx.scenes.scene2d.Actor;
import com.badlogic.gdx.scenes.scene2d.InputEvent;
import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.scenes.scene2d.utils.ClickListener;
import com.badlogic.gdx.utils.viewport.ScreenViewport;
import com.gamefromscratch.Buildings.TownCenter;
import com.gamefromscratch.Map.AutoGenerated.AutoTiler;
import com.gamefromscratch.Map.TiledMapStage;
import com.gamefromscratch.Units.Worker;

public class GameApplication implements Screen, ApplicationListener {
    private TiledMap tiledMap = new TiledMap();
    private Stage stage;
    private Stage map;
    OrthogonalTiledMapRenderer renderer;
    OrthographicCamera camera;
    public Actor selectedUnit;
    float currentZoom = 0;

    @Override
    public void create() {
        AutoTiler autoTiler = new AutoTiler(100, 100, Gdx.files.internal("tileset.json"));
        TiledMap map = autoTiler.generateMap();
        this.map = new TiledMapStage(map);

        Gdx.input.setInputProcessor(this.map);
        stage = new Stage(new ScreenViewport());


        Gdx.input.setInputProcessor(stage);
        TownCenter defaultTownCenter = new TownCenter(this);
        Worker worker = new Worker(defaultTownCenter, this);
        defaultTownCenter.setPosition(500, 100);

        stage.addActor(worker);
        stage.addActor(defaultTownCenter);
        stage.addListener(new ClickListener(Input.Buttons.LEFT) {
            @Override
            public void clicked(InputEvent event, float x, float y) {
                if (selectedUnit != null) {
                    selectedUnit.moveBy(x + selectedUnit.getX(), y - selectedUnit.getY());
                }

            }
        });


        renderer = new OrthogonalTiledMapRenderer(map);
        camera = new OrthographicCamera(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
        camera.setToOrtho(false, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());

    }

    @Override
    public void show() {

    }
    public void setSelectedUnit(Actor actor){
        selectedUnit = actor;
    }
    @Override
    public void render(float delta) {
        Gdx.gl.glClearColor(135 / 255f, 206 / 255f, 235 / 255f, 1);
        Gdx.gl.glBlendFunc(GL20.GL_SRC_ALPHA, GL20.GL_ONE_MINUS_SRC_ALPHA);
        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
        renderer.setView(camera);
        renderer.render();
        stage.act();
        stage.draw();
        camera.update();


    }

    @Override
    public void resize(int width, int height) {

    }

    @Override
    public void render() {
        Gdx.gl.glClearColor(135 / 255f, 206 / 255f, 235 / 255f, 1);
        Gdx.gl.glBlendFunc(GL20.GL_SRC_ALPHA, GL20.GL_ONE_MINUS_SRC_ALPHA);
        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
        renderer.setView(camera);
        renderer.render();

        stage.act(Gdx.graphics.getDeltaTime());
        stage.draw();
    }

    @Override
    public void pause() {

    }

    @Override
    public void resume() {

    }

    @Override
    public void hide() {

    }

    @Override
    public void dispose() {

    }


}
*/